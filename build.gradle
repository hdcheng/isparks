group 'app.isparks'
version '0.0.1 beta'
description = "isparks for person"

buildscript {
    ext{
        springBootVersion = '2.6.6'
    }
    repositories {
        mavenCentral()
        google()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
    }
}

// 版本统一管理
ext {
    springVersion = '5.3.18'
    lombokVersion = '1.18.12'
    mybatisVersion = '3.5.5'
    mybatisBootVersion = '2.1.3'
    mybatisSpringVersion = '2.0.5'
    pageHelperVersion = '5.2.0'
    hikariCPVersion = '3.4.5'
    h2DatabaseVersion = '1.4.200'
    postgresqlJDBCVersion = '42.2.16'
    shiroVersion = '1.5.3'
    swaggerVersion = '2.9.2'
    jwtVersion = '3.13.0'
    jose4jVersion = '0.7.6'
    javaxValidationVersion = '2.0.1.Final'
    mapstructVersion = '1.3.1.Final'
    yamlVersion = '1.26'
    servletVersion = '4.0.1'
    slf4jVersion = '1.7.30'
    logbackVersion = '1.2.11'
    logbackExpSpringVersion = '0.1.5'
    pf4jVersion = '3.5.0'
    commonsioVersion = '2.8.0'
    gsonVersion = '2.8.6'
    aspectjVersion = '1.9.6'
    guavaVersion = '30.1.1-jre'
    thymeleafVerson = '3.0.15.RELEASE'
}
/**
 *  All projects config
 * 所有项目共享的配置
 */
allprojects {

    repositories {
        mavenCentral()
        google()
    }

    apply plugin: 'idea'
    //apply plugin: 'eclipse'
    apply plugin: 'java'
    apply plugin: 'war'
    apply plugin: 'checkstyle'

    //jdk版本
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    // 设置编译使用utf-8编码
    tasks.withType(JavaCompile){
        options.encoding = "UTF-8"
    }
    tasks.withType(Javadoc) {
        options.encoding = 'UTF-8'
    }
    tasks.withType(Test) {
        systemProperty "file.encoding", "UTF-8"
    }

    // 依赖
    dependencies {
        // log
        implementation "ch.qos.logback:logback-classic:$logbackVersion"
        implementation "org.slf4j:slf4j-api:$slf4jVersion"
        implementation "org.logback-extensions:logback-ext-spring:$logbackExpSpringVersion"
        implementation "org.slf4j:jcl-over-slf4j:$slf4jVersion"

        // test
        testCompileOnly "org.springframework:spring-test:$springVersion"
        testImplementation('org.junit.jupiter:junit-jupiter:5.6.2')
    }
    tasks.withType(JavaCompile) {
        // 编码格式
        options.encoding = "UTF-8"
        // 去除编译警告
        options.compilerArgs << '-nowarn'
    }
}

test {
    useJUnitPlatform()
}
checkstyle {
    toolVersion '6.11.1'
    showViolations true
}

// config checkstyle
// 参考：https://blog.csdn.net/yuanjw2014/article/details/52851485/
check.dependsOn 'checkstyle'

task checkstyle(type: Checkstyle) {
    configFile file("${project.projectDir}/config/checkstyle/checkstyle.xml")// Where my checkstyle config is...
    //configProperties.checkstyleSuppressionsPath = file("${project.projectDirr}/config/quality/suppressions.xml").absolutePath // Where is my suppressions file for checkstyle is...
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    exclude "**/test/**"
    classpath = files()
}

subprojects {
    dependencies {
        // lombok
        compileOnly "org.projectlombok:lombok:$lombokVersion"
        annotationProcessor "org.projectlombok:lombok:$lombokVersion"
        testCompileOnly "org.projectlombok:lombok:$lombokVersion"
        testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"

        testCompile group: 'junit', name: 'junit', version: '4.12'
    }
}



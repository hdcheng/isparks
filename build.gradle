plugins {
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'java'
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
javadoc.options.encoding = 'UTF-8'

bootJar {
    enabled false
}

subprojects {
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'war'
    apply plugin: 'checkstyle'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group 'app.isparks'
    version '0.0.1 beta'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    compileJava.options.encoding = 'UTF-8'
    compileTestJava.options.encoding = 'UTF-8'
    javadoc.options.encoding = 'UTF-8'

    repositories {
        mavenLocal()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
    }


    // 版本统一管理
    ext {
        springVersion = '5.2.9.RELEASE'
        lombokVersion = '1.18.12'
        mybatisVersion = '3.5.5'
        mybatisBootVersion = '2.1.3'
        mybatisSpringVersion = '2.0.5'
        pageHelperVersion = '5.2.0'
        hikariCPVersion = '3.4.5'
        h2DatabaseVersion = '1.4.200'
        postgresqlJDBCVersion = '42.2.16'
        shiroVersion = '1.5.3'
        swaggerVersion = '2.9.2'
        jwtVersion = '3.13.0'
        jose4jVersion = '0.7.6'
        javaxValidationVersion = '2.0.1.Final'
        mapstructVersion = '1.3.1.Final'
        yamlVersion = '1.26'
        servletVersion = '4.0.1'
        slf4jVersion = '1.7.30'
        logbackVersion = '1.2.3'
        logbackExpSpringVersion = '0.1.5'
        pf4jVersion = '3.5.0'
        commonsioVersion = '2.8.0'
        gsonVersion = '2.8.6'
        aspectjVersion = '1.9.6'
        guavaVersion = '30.1.1-jre'
    }
}
// 依赖

tasks.withType(JavaCompile) {
    // 编码格式
    options.encoding = "UTF-8"
    // 去除编译警告
    options.compilerArgs << '-nowarn'
}


test {
    useJUnitPlatform()
}
/*checkstyle {
    toolVersion '6.11.1'
    showViolations true
}*/

// config checkstyle
// 参考：https://blog.csdn.net/yuanjw2014/article/details/52851485/
check.dependsOn 'checkstyle'

task checkstyle(type: Checkstyle) {
    configFile file("${project.projectDir}/config/checkstyle/checkstyle.xml")// Where my checkstyle config is...
    //configProperties.checkstyleSuppressionsPath = file("${project.projectDirr}/config/quality/suppressions.xml").absolutePath // Where is my suppressions file for checkstyle is...
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    exclude "**/test/**"
    classpath = files()
}

subprojects {
    dependencies {

        // log
        compile "ch.qos.logback:logback-classic:$logbackVersion"
        compile "org.slf4j:slf4j-api:$slf4jVersion"
        compile "org.logback-extensions:logback-ext-spring:$logbackExpSpringVersion"
        compile "org.slf4j:jcl-over-slf4j:$slf4jVersion"

        // test
        testCompileOnly "org.springframework:spring-test:$springVersion"
        testImplementation('org.junit.jupiter:junit-jupiter:5.6.2')

        // lombok
        compileOnly "org.projectlombok:lombok:$lombokVersion"
        annotationProcessor "org.projectlombok:lombok:$lombokVersion"
        testCompileOnly "org.projectlombok:lombok:$lombokVersion"
        testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"

        testImplementation group: 'junit', name: 'junit', version: '4.12'
    }
}